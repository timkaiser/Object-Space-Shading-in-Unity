// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
Texture2D<int> ID;
Texture2D<float4> WorldPos;
Texture2D<float3> Normal;
Texture2D<float2> UV;
RWTexture2D<float3> Output;

uint2 uv_to_px_coords(float2 uv, uint mip, uint atlasWidth, uint atlasHeight) {
	uint widthAtLevel = atlasWidth / 2 >> mip;
	uint heightAtLevel = atlasHeight >> mip;

	uint2 xy = uint2(widthAtLevel * uv.x, heightAtLevel * uv.y);

	uint offset = atlasWidth - 2 * widthAtLevel;

	return uint2(xy.x + offset, xy.y);

}

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	float4 worldPos = WorldPos[id.xy];
	float3 normal = Normal[id.xy];
	float2 uv = UV[id.xy];

	uint width, height;
	Output.GetDimensions(width, height);

	uint mipLevel = worldPos.w;

	uint2 xy = uv_to_px_coords(uv, mipLevel, width, height);

	Output[xy] = float3(1,0,0);
}


